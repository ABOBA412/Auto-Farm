local RunService = game:GetService("RunService")
local Enemies = workspace:WaitForChild("Enemies")

local BringCFrame = nil
local ActiveBrings = {}
local IsBringing = false

-- создать привязку моба
local function AttachMob(mob)
    if ActiveBrings[mob] then return end
    local root = mob:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local att = Instance.new("Attachment")
    att.Parent = root

    local align = Instance.new("AlignPosition")
    align.MaxForce = 999999999
    align.Responsiveness = 200
    align.ApplyAtCenterOfMass = true
    align.Mode = Enum.PositionAlignmentMode.OneAttachment
    align.Attachment0 = att
    align.Parent = root

    ActiveBrings[mob] = {att = att, align = align}
end

-- чистка привязки
local function DetachMob(mob)
    local stuff = ActiveBrings[mob]
    if stuff then
        if stuff.att then stuff.att:Destroy() end
        if stuff.align then stuff.align:Destroy() end
        ActiveBrings[mob] = nil
    end
end

-- главный цикл
local function BringLoop(enemyName)
    IsBringing = true
    while IsBringing and BringCFrame do
        for _, mob in ipairs(Enemies:GetChildren()) do
            if mob.Name == enemyName and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                AttachMob(mob)
                local stuff = ActiveBrings[mob]
                if stuff and stuff.align then
                    stuff.align.Position = BringCFrame.Position
                end
            else
                DetachMob(mob)
            end
        end
        RunService.Heartbeat:Wait()
    end
    -- очистка после выхода
    for mob, _ in pairs(ActiveBrings) do
        DetachMob(mob)
    end
end

-- публичные функции
function StartBringMobs(enemyName)
    local anchor = nil
    local closestDist = math.huge
    local player = game.Players.LocalPlayer
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    -- выбираем ближайшего моба
    for _, mob in ipairs(Enemies:GetChildren()) do
        if mob.Name == enemyName and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
            local mobRoot = mob:FindFirstChild("HumanoidRootPart")
            if mobRoot then
                local dist = (mobRoot.Position - root.Position).Magnitude
                if dist < closestDist then
                    closestDist = dist
                    anchor = mobRoot
                end
            end
        end
    end

    if anchor then
        BringCFrame = anchor.CFrame
        task.spawn(function()
            BringLoop(enemyName)
        end)
    else
        warn("Нет подходящих мобов")
    end
end

function StopBringMobs()
    IsBringing = false
    BringCFrame = nil
end

StartBringMobs(Monkey)

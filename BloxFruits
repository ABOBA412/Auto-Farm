local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Enemies = workspace:WaitForChild("Enemies")

local ActiveBrings = {}
local IsBringing = false
local BringPoint = nil
local BRING_RADIUS = 400 -- можно менять слайдером

-- создать привязку
local function AttachMob(mob)
    if ActiveBrings[mob] then return end
    local root = mob:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local att = Instance.new("Attachment")
    att.Parent = root

    local align = Instance.new("AlignPosition")
    align.MaxForce = 999999999
    align.Responsiveness = 200
    align.ApplyAtCenterOfMass = true
    align.Mode = Enum.PositionAlignmentMode.OneAttachment
    align.Attachment0 = att
    align.Parent = root

    ActiveBrings[mob] = {att = att, align = align}
end

-- чистка привязки
local function DetachMob(mob)
    local stuff = ActiveBrings[mob]
    if stuff then
        if stuff.att then stuff.att:Destroy() end
        if stuff.align then stuff.align:Destroy() end
        ActiveBrings[mob] = nil
    end
end

-- очистка всех
local function ClearAll()
    for mob, _ in pairs(ActiveBrings) do
        DetachMob(mob)
    end
    ActiveBrings = {}
    if BringPoint then
        BringPoint:Destroy()
        BringPoint = nil
    end
end

-- главный цикл
local function BringLoop(enemyName)
    IsBringing = true
    local startTime = tick()

    while IsBringing and BringPoint do
        for _, mob in ipairs(Enemies:GetChildren()) do
            if mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                if mob.Name == enemyName then
                    local root = mob:FindFirstChild("HumanoidRootPart")
                    if root then
                        local dist = (root.Position - BringPoint.Position).Magnitude
                        if dist <= BRING_RADIUS then
                            AttachMob(mob)
                            local stuff = ActiveBrings[mob]
                            if stuff and stuff.align then
                                stuff.align.Position = BringPoint.Position
                            end
                        else
                            DetachMob(mob)
                        end
                    end
                end
            else
                DetachMob(mob)
            end
        end

        -- 5 секунд держим мобов
        if tick() - startTime >= 5 then
            StopBringMobs()
            break
        end

        RunService.Heartbeat:Wait()
    end
end

-- публичная функция
function StartBringMobs(enemyName)
    if IsBringing then StopBringMobs() end

    local playerRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not playerRoot then return end

    -- ищем ближайшего моба
    local closestMob, closestDist
    closestDist = math.huge
    for _, mob in ipairs(Enemies:GetChildren()) do
        if mob.Name == enemyName and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
            local mobRoot = mob:FindFirstChild("HumanoidRootPart")
            if mobRoot then
                local dist = (mobRoot.Position - playerRoot.Position).Magnitude
                if dist < closestDist then
                    closestDist = dist
                    closestMob = mobRoot
                end
            end
        end
    end

    if closestMob then
        -- создаём опорную точку
        BringPoint = Instance.new("Part")
        BringPoint.Anchored = true
        BringPoint.CanCollide = false
        BringPoint.Transparency = 1
        BringPoint.Size = Vector3.new(1,1,1)
        BringPoint.CFrame = closestMob.CFrame
        BringPoint.Parent = workspace

        task.spawn(function()
            BringLoop(enemyName)
        end)
    else
        warn("Нет мобов")
    end
end

function StopBringMobs()
    IsBringing = false
    ClearAll()
end

StartBringMobs("Pirate")

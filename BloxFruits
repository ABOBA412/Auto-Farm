--// Bring mobs to one sticky point ("magnet")
-- Вызов:  StartBringMobs("Bandit")   и   StopBringMobs()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris   = game:GetService("Debris")

local LocalPlayer = Players.LocalPlayer
local function getHRP()
    local c = LocalPlayer.Character
    return c and c:FindFirstChild("HumanoidRootPart")
end

-- Папка с мобами (Blox Fruits)
local EnemiesFolder = workspace:FindFirstChild("Enemies") or workspace

-- Текущие состояния
local bringConn       -- Heartbeat обновление
local scanConn        -- ChildAdded/Removed слежение
local magnetPart      -- Невидимый "магнит"
local enemyNameKey    -- Имя текущей цели
local attached = {}   -- mobModel -> {att, ap, ao}
local candidates = {} -- список актуальных мобов (моделей)

-- Утилиты
local function isAlive(model)
    local hum = model:FindFirstChildOfClass("Humanoid")
    return hum and hum.Health > 0 and hum.RootPart
end

local function normalize(s) return string.lower(tostring(s)) end

local function nameMatches(mobName, want)
    mobName, want = normalize(mobName), normalize(want)
    -- точное ИЛИ частичное совпадение
    return mobName == want or string.find(mobName, want, 1, true) ~= nil
end

local function ensureMagnet(atCFrame)
    if magnetPart and magnetPart.Parent then return magnetPart end
    magnetPart = Instance.new("Part")
    magnetPart.Name = "BringMagnet"
    magnetPart.Anchored = true
    magnetPart.CanCollide = false
    magnetPart.CanQuery = false
    magnetPart.CanTouch = false
    magnetPart.Transparency = 1
    magnetPart.Size = Vector3.new(1,1,1)
    magnetPart.CFrame = atCFrame or CFrame.new(0, 1000, 0)
    magnetPart.Parent = workspace
    return magnetPart
end

local function attachMob(mob)
    if attached[mob] then return end
    local hum = mob:FindFirstChildOfClass("Humanoid")
    local root = hum and hum.RootPart
    if not root then return end

    -- Ставим Noclip на рут (чтобы не пинались)
    pcall(function() root.CanCollide = false end)

    local att = Instance.new("Attachment")
    att.Name = "Bring_Att"
    att.Parent = root

    local ap = Instance.new("AlignPosition")
    ap.Name = "Bring_AP"
    ap.Mode = Enum.PositionAlignmentMode.OneAttachment
    ap.Attachment0 = att
    ap.MaxForce = 9e8
    ap.Responsiveness = 200
    ap.ApplyAtCenterOfMass = true
    ap.Parent = root

    local ao = Instance.new("AlignOrientation")
    ao.Name = "Bring_AO"
    ao.Mode = Enum.OrientationAlignmentMode.OneAttachment
    ao.Attachment0 = att
    ao.MaxTorque = 9e8
    ao.Responsiveness = 200
    ao.Parent = root

    attached[mob] = {att = att, ap = ap, ao = ao}
end

local function detachMob(mob)
    local pack = attached[mob]
    if not pack then return end
    attached[mob] = nil
    pcall(function() if pack.ao then pack.ao:Destroy() end end)
    pcall(function() if pack.ap then pack.ap:Destroy() end end)
    pcall(function() if pack.att then pack.att:Destroy() end end)
end

local function clearAll()
    for mob,_ in pairs(attached) do
        detachMob(mob)
    end
    attached = {}
    if bringConn then bringConn:Disconnect() bringConn = nil end
    if scanConn  then scanConn:Disconnect()  scanConn  = nil end
    if magnetPart then Debris:AddItem(magnetPart, 0) magnetPart = nil end
end

-- Поддерживаем актуальный список кандидатов, без тяжёлых сканов
local function resubscribeEnemiesFolder()
    -- начальная загрузка
    candidates = {}
    for _,child in ipairs(EnemiesFolder:GetChildren()) do
        if child:IsA("Model") then
            candidates[child] = true
        end
    end
    -- подписки
    if scanConn then scanConn:Disconnect() scanConn = nil end
    scanConn = EnemiesFolder.ChildAdded:Connect(function(ch)
        if ch:IsA("Model") then candidates[ch] = true end
    end)
    EnemiesFolder.ChildRemoved:Connect(function(ch)
        candidates[ch] = nil
        detachMob(ch)
    end)
end

local function pickAnchorCFrame()
    -- Якорь = ближайший живой моб нужного имени; если нет — позиция игрока
    local hrp = getHRP()
    local bestCFrame
    local bestDist = math.huge

    for mob,_ in pairs(candidates) do
        if mob.Parent and nameMatches(mob.Name, enemyNameKey) and isAlive(mob) then
            local root = mob.Humanoid.RootPart
            local dist = hrp and (root.Position - hrp.Position).Magnitude or math.huge
            if dist < bestDist then
                bestDist = dist
                bestCFrame = root.CFrame
            end
        end
    end

    if bestCFrame then
        return bestCFrame + Vector3.new(0, 3, 0) -- чуть выше, чтобы не тонуло в земле
    elseif hrp then
        return hrp.CFrame + Vector3.new(0, 3, 0)
    else
        return CFrame.new(0,1000,0)
    end
end

-- Основной Heartbeat
local function startHeartbeat()
    if bringConn then bringConn:Disconnect() bringConn = nil end
    bringConn = RunService.Heartbeat:Connect(function()
        if not enemyNameKey then return end

        -- фикс симрадиуса (мягко)
        pcall(function()
            sethiddenproperty(LocalPlayer, "SimulationRadius", 1e9)
        end)

        -- держим магнит в якорной точке
        local anchor = pickAnchorCFrame()
        ensureMagnet(anchor).CFrame = anchor

        -- прикрепляем нужных, отцепляем лишних
        for mob,_ in pairs(candidates) do
            if mob.Parent and nameMatches(mob.Name, enemyNameKey) and isAlive(mob) then
                attachMob(mob)
            else
                detachMob(mob)
            end
        end

        -- подаём цель всем прикреплённым
        local targetPos = magnetPart and magnetPart.Position
        local targetCFr = magnetPart and magnetPart.CFrame
        if targetPos and targetCFr then
            for mob, pack in pairs(attached) do
                local ok = mob.Parent and pack and pack.ap and pack.ao
                if ok then
                    pack.ap.Position = targetPos
                    pack.ao.CFrame = targetCFr
                else
                    detachMob(mob)
                end
            end
        end
    end)
end

-- Публичное API
function StartBringMobs(name)
    if type(name) ~= "string" then
        warn('Передай имя строкой: StartBringMobs("Bandit")')
        return
    end
    enemyNameKey = name
    resubscribeEnemiesFolder()

    -- проверим, что есть хотя бы один подходящий моб
    local any = false
    for mob,_ in pairs(candidates) do
        if mob.Parent and nameMatches(mob.Name, enemyNameKey) and isAlive(mob) then
            any = true break
        end
    end
    if not any then
        warn("Нет подходящих мобов: " .. tostring(name) .. '. Попробуй, например: StartBringMobs("Bandit")')
        -- всё равно запускаем — как только появятся, начнёт тянуть
    end

    ensureMagnet(pickAnchorCFrame())
    startHeartbeat()
end

function StopBringMobs()
    enemyNameKey = nil
    clearAll()
end


StartBringMobs("Bandit")
wait(30)
StopBringMobs()
